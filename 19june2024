from flask import Flask, request, jsonify
import pyodbc

app = Flask(__name__)

# Database Configuration
DB_SERVER = 'your_db_server'
DB_DATABASE = 'abianalytics'
DB_USERNAME = 'your_db_username'
DB_PASSWORD = 'your_db_password'

# Connect to the database and query for similar descriptions
def query_database(description):
    conn_str = (
        f"DRIVER={{ODBC Driver 17 for SQL Server}};"
        f"SERVER={DB_SERVER};"
        f"DATABASE={DB_DATABASE};"
        f"UID={DB_USERNAME};"
        f"PWD={DB_PASSWORD}"
    )
    conn = pyodbc.connect(conn_str)
    cursor = conn.cursor()
    
    query = """
    SELECT * FROM dbo.incident
    WHERE description LIKE ? OR notes LIKE ?
    """
    cursor.execute(query, '%' + description + '%', '%' + description + '%')
    columns = [column[0] for column in cursor.description]
    results = cursor.fetchall()
    
    conn.close()
    return [dict(zip(columns, row)) for row in results]

@app.route('/query', methods=['POST'])
def query_service():
    data = request.json
    problem_description = data.get('problem_description')
    
    if not problem_description:
        return jsonify({'error': 'Problem description is required'}), 400
    
    results = query_database(problem_description)
    return jsonify(results)

if __name__ == '__main__':
    app.run(debug=True)


....................
import requests

url = 'http://localhost:5000/query'
payload = {'problem_description': 'your problem description here'}
headers = {'Content-Type': 'application/json'}

response = requests.post(url, json=payload, headers=headers)
print(response.json())

