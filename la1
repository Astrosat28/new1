<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Network Graph Example</title>
    <script src="https://d3js.org/d3.v6.min.js"></script>
    <style>
        .node-label {
            font-family: sans-serif;
            font-size: 12px;
            pointer-events: none;
        }
    </style>
    <script>
        const jsonData = {
            "responseStatus": "OK",
            "totalrecords": 1,
            "lable": "app",
            "names": [
                "APS",
                "Delta-caesar",
                "delta-online check request",
                "fnms",
                "TAI",
                "pep+"
            ]
        };

        const graphData = {
            "responseStatus": "OK",
            "totalrecords": 100,
            "nodes": [
                {"name": "APS", "type": "APP"},
                {"name": "dadaS", "type": "JCL"},
                {"name": "ccacPS", "type": "JCL"},
                {"name": "wqddPS", "type": "JCL"},
                {"name": "casS", "type": "vscdc"}
            ],
            "edges": [
                {"source": "APS", "relationname": "CALLS", "target": "dadaS"},
                {"source": "APS", "relationname": "CALLS", "target": "ccacPS"},
                {"source": "APS", "relationname": "CALLS", "target": "wqddPS"},
                {"source": "APS", "relationname": "CALLS", "target": "casS"},
            ]
        };

        function populateDropdown() {
            const selectElement = document.getElementById("namesDropdown");
            jsonData.names.forEach(name => {
                const option = document.createElement("option");
                option.text = name;
                option.value = name;
                selectElement.add(option);
            });
        }

        function drawNetworkGraph() {
            const width = 800;
            const height = 600;

            d3.select("#graph").selectAll("*").remove();
            
            const svg = d3.select("#graph")
                .attr("width", width)
                .attr("height", height);
                
            const simulation = d3.forceSimulation(graphData.nodes)
                .force("link", d3.forceLink(graphData.edges).id(d => d.name).distance(100))
                .force("charge", d3.forceManyBody().strength(-200))
                .force("center", d3.forceCenter(width / 2, height / 2));
                
            const link = svg.append("g")
                .attr("stroke", "#999")
                .attr("stroke-opacity", 0.6)
                .selectAll("line")
                .data(graphData.edges)
                .join("line")
                .attr("stroke-width", 2);
                
            const node = svg.append("g")
                .attr("stroke", "#fff")
                .attr("stroke-width", 1.5)
                .selectAll("circle")
                .data(graphData.nodes)
                .join("circle")
                .attr("r", 8)
                .attr("fill", "#69b3a2");
                
            node.append("title")
            .text(d => d.name);
            const label = svg.append("g")
                .attr("class", "node-label")
                .selectAll("text")
                .data(graphData.nodes)
                .join("text")
                .attr("dy", ".35em")
                .attr("x", d => d.x + 12)
                .attr("y", d => d.y)
                .text(d => d.name);

            simulation.on("tick", () => {
                link
                    .attr("x1", d => d.source.x)
                    .attr("y1", d => d.source.y)
                    .attr("x2", d => d.target.x)
                    .attr("y2", d => d.target.y);

                node
                    .attr("cx", d => d.x)
                    .attr("cy", d => d.y);

                label
                    .attr("x", d => d.x + 12)
                    .attr("y", d => d.y);
            });

}

function onDropdownChange() {
drawNetworkGraph();
}

window.onload = function() {
const selectElement = document.getElementById("namesDropdown");
const placeholder = document.createElement("option");
placeholder.text = jsonData.lable;
placeholder.value = "";
placeholder.disabled = true;
placeholder.selected = true;
selectElement.add(placeholder);

populateDropdown();
selectElement.addEventListener("change", onDropdownChange);
}
</script>
</head>
<body>
    <h1>Network Graph Example</h1>
    <select id="namesDropdown">
    </select>
    <svg id="graph"></svg>
</body>
</html>
