from exchangelib import DELEGATE, Account, Credentials, Configuration, Folder
from bs4 import BeautifulSoup
import os

# Function to fetch unread emails from a shared mailbox
def fetch_unread_emails_from_shared_mailbox():
    # Define credentials and account details
    credentials = Credentials(username='your_username', password='your_password')
    config = Configuration(server='outlook.office365.com', credentials=credentials)
    account = Account(primary_smtp_address='your_shared_mailbox@example.com', config=config, autodiscover=False, access_type=DELEGATE)

    # Select the inbox folder
    inbox = account.inbox

    # Filter unread emails
    unread_emails = inbox.filter(is_read=False)

    return unread_emails

# Function to extract table data from an email
def extract_table_data_from_email(email):
    # Extract the HTML content
    html_content = None
    for attachment in email.attachments:
        if isinstance(attachment, ItemAttachment) and isinstance(attachment.item, Message):
            html_content = attachment.item.body
            break

    if not html_content:
        html_content = email.body

    # Parse the HTML content and extract tables
    soup = BeautifulSoup(html_content, 'html.parser')
    tables = soup.find_all('table')
    table_data = []
    
    for table in tables:
        headers = [header.text.strip() for header in table.find_all('th')]
        rows = table.find_all('tr')
        
        for row in rows:
            cols = row.find_all('td')
            if len(cols) > 0:
                row_data = {headers[i]: col.text.strip() for i, col in enumerate(cols)}
                table_data.append(row_data)

    return table_data

# Main function to fetch unread emails and extract table data
def main():
    unread_emails = fetch_unread_emails_from_shared_mailbox()

    all_table_data = []

    for email in unread_emails:
        table_data = extract_table_data_from_email(email)
        all_table_data.extend(table_data)

        # Mark email as read
        email.is_read = True
        email.save()

    # Save the extracted table data to a file
    with open('extracted_table_data.txt', 'w') as f:
        for data in all_table_data:
            f.write(str(data) + '\n')

if __name__ == "__main__":
    main()
